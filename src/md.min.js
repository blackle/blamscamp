/**
 * Copied from Feather Wiki:
 * https://codeberg.org/Alamantus/FeatherWiki/src/commit/1e1bb77f42e057b53cd31acf0345612cbc51c6f4/helpers/md.js
 * 
 * Modified beyond recognition from md.js, a lightweight markdown parser
 * https://github.com/thysultan/md.js
 * 
 * @licence MIT
 */
/**
 * Supports Markdown Features:
 * - HTML
 * - headings h1â€“h6+ (# h1, ## h2, ### h3, etc.)
 * - paragraphs (\n\n)
 * - line breaks (  \n)
 * - blockquotes (> text)
 * - horizontal rule (---, ***, - - -, * * *)
 * - code blocks (```)
 * - inline code (`code`)
 * - images with alt text & optional title (![alt](image_src "optional title"))
 * - inline Markdown links with optional title ([link text](link_url "optional title"))
 * - auto links & email linking (<http://url.domain>, <person@email.example>)
 * - lists with indentation (- list item, * list item, + list item)
 * - checkboxes ([ ], [x])
 * - bold, italic (**bold**, __bold__, *italic*, _italic_, ***bold & italic***, ___bold & italic___, **_bold & italic_**, etc.)
 * - strikethrough (~~strikethrough~~)
 * - escaped characters (\*, \_)
 */
const charMap={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;",$:"&#36;","&":"&amp;","[":"&#91;","]":"&#93;","(":"&#40;",")":"&#41;",_:"&#95;","*":"&ast;","`":"&#96;"},doubleEscaped=Object.keys(charMap).filter((e=>"&"!=e)).map((e=>charMap[e].replace("&"!=e?"&":"",""))),htmlEntity=e=>e.replace(/[<>$&\(\)\[\]"']/g,(e=>charMap[e]||e)).replace(new RegExp(`&amp;(${doubleEscaped.join("|")})`,"g"),"&$1");function md(e){if(!e)return"";var l=[],t=0,c=[],n=0,r=e.length;let a;"\n"!==e[r-1]&&"\n"!==e[r-2]&&(e+="\n\n"),e=(e=e.replace(/\\(.)/g,((e,l)=>charMap[l]||e)).replace(/```(.*)\n([^\0]+?)```(?!```)/gm,((e,c,n)=>(l[t]={lang:c,block:htmlEntity(n)},`{code-${t++}}`))).replace(/`([^`]+?)`/g,((e,l)=>`<code>${htmlEntity(l)}</code>`)).replace(/<([^>\s]+(\/\/|@)[^>\s]+)>/g,((e,l,t)=>`[${l}](${"@"===t?"mailto:":""}${l})`)).replace(/(!?)\[([^\]]*?)\]\(([^\s\n]*)(?:| "(.*)")\)/gm,((e,l,t,c,n)=>{t=htmlEntity(t);try{c=decodeURI(c)}catch{}return c=encodeURI(c),n=n?` title="${htmlEntity(n)}"`:"",l?`<img src="${c}" alt="${t}"${n}>`:`<a href="${c}"${n}>${t}</a>`})).replace(/(<\/?[a-zA-Z]+[^>]*>)/gm,((e,l)=>(c[n]=l,`{html-${n++}}`))).replace(/^[ \t]*>+ (.*)/gm,"<blockquote>\n$1\n</blockquote>").replace(/(<\/blockquote>\n?<blockquote>)+?/g,"").replace(/^(#+) +(.*)/gm,((e,l,t)=>`<h${l.length}>${t}</h${l.length}>`)).replace(/^([^\n\t ])(.*)\n====+/gm,"<h1>$1$2</h1>").replace(/^([^\n\t ])(.*)\n----+/gm,"<h2>$1$2</h2>").replace(/\n( *[-*]){3,}\n/gm,"<hr>").replace(/\[( |x)\]/g,((e,l)=>`<input type="checkbox" disabled${"x"===l.toLowerCase()?" checked":""}>`)).replace(/  +\n/gm,"<br>").replace(/^([^-\+\*\d<\t \n])([^]*?)(?:\n\n)/gm,((e,l,t)=>`<p>${l}${t}</p>\n`))).replace(/^([\t ]*)(?:(-|\+|\*)|(\d+(?:\)|\.))) (.*)/gm,((e,l,t,c,n)=>{l.length>0&&!a?a=l.replace(/[^ ]/g,""):0===l.length&&a&&(a=void 0),a&&(l=l.replace(new RegExp(a,"g"),"\t"));const r=c?"o":"u";return`${l}<${r}l><li>${n}</li></${r}l>`}));for(var p=/<\/li><\/(u|o)l>\n(\t+)<(u|o)l><li>(.*)<\/li><\/(u|o)l>/;e.match(p);)e=e.replace(p,(function(e,l,t,c,n,r){return t.length>0&&(t=t.substring(1)).length>0&&(t="\n"+t),`${t}<${c}l><li>${n}</li></${r}l></li></${l}l>`}));e=e.replace(/(<\/ul>\n?[ \t]*<ul>)+?/g,"").replace(/(<\/ol>\n?[ \t]*<ol>)+?/g,"").replace(/\*\*([^\n*]+?)\*\*/g,"<strong>$1</strong>").replace(/__([^\n_]+?)__/g,"<strong>$1</strong>").replace(/\*([^\n*]+?)\*/g,"<em>$1</em>").replace(/_([^\n_]+?)_/g,"<em>$1</em>").replace(/(?:~~)([^~]+?)(?:~~)/g,"<del>$1</del>");for(let l=0;l<n;l++)e=e.replace(`{html-${l}}`,c[l]);for(let c=0;c<t;c++){const{lang:t,block:n}=l[c];e=e.replace(`{code-${c}}`,`<pre><code${t?` class="language-${t}"`:""}>${htmlEntity(n)}</code></pre>`)}return e.trim()}